{"ast":null,"code":"var _jsxFileName = \"/Users/gyunggyugang/Programing/ToyProject/ReactMovieReviewApp/fe/src/components/Card.js\",\n  _s = $RefreshSig$();\n/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from './Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  content\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // 데이터를 가져오는 비동기 작업 (예: 이미지 로딩)을 수행합니다.\n    // 작업이 완료되면 setIsLoading(false)를 호출하여 로딩 상태를 해제합니다.\n    // 이 작업은 데이터를 가져오는 방식에 따라 달라질 수 있습니다.\n    // 예를 들어, 이미지 로딩 시에는 이미지 `onLoad` 이벤트를 사용할 수 있습니다.\n    setIsLoading(false); // 임시로 로딩 상태를 해제\n  }, []); // 빈 배열은 컴포넌트가 마운트될 때 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styled.CardStyled}`,\n    children: isLoading ?\n    /*#__PURE__*/\n    // 로딩 중일 때 표시할 화면\n    _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 데이터가 로드된 후에 표시할 내용\n    _jsxDEV(\"div\", {\n      className: `w-64 h-80 text-center border shadow-md pb-2`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"w-full h-5/6\",\n        src: `https://www.themoviedb.org/t/p/original${content.poster_path || content.backdrop_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 z-10\",\n        children: content.title || content.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Card","content","_s","isLoading","setIsLoading","className","CardStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","backdrop_path","title","name","_c","$RefreshReg$"],"sources":["/Users/gyunggyugang/Programing/ToyProject/ReactMovieReviewApp/fe/src/components/Card.js"],"sourcesContent":["/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport styled from './Card.module.css';\n\nexport default function Card({ content }) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // 데이터를 가져오는 비동기 작업 (예: 이미지 로딩)을 수행합니다.\n    // 작업이 완료되면 setIsLoading(false)를 호출하여 로딩 상태를 해제합니다.\n    // 이 작업은 데이터를 가져오는 방식에 따라 달라질 수 있습니다.\n    // 예를 들어, 이미지 로딩 시에는 이미지 `onLoad` 이벤트를 사용할 수 있습니다.\n    setIsLoading(false); // 임시로 로딩 상태를 해제\n  }, []); // 빈 배열은 컴포넌트가 마운트될 때 한 번만 실행\n\n  return (\n    <div className={`${styled.CardStyled}`}>\n      {isLoading ? (\n        // 로딩 중일 때 표시할 화면\n        <div>Loading...</div>\n      ) : (\n        // 데이터가 로드된 후에 표시할 내용\n        <div className={`w-64 h-80 text-center border shadow-md pb-2`}>\n          <img\n            className='w-full h-5/6'\n            src={`https://www.themoviedb.org/t/p/original${\n              content.poster_path || content.backdrop_path\n            }`}\n          />\n          <div className='p-3 z-10'>{content.title || content.name}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACAQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKM,SAAS,EAAG,GAAER,MAAM,CAACS,UAAW,EAAE;IAAAC,QAAA,EACpCJ,SAAS;IAAA;IACR;IACAJ,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAAA;IAErB;IACAZ,OAAA;MAAKM,SAAS,EAAG,6CAA6C;MAAAE,QAAA,gBAC5DR,OAAA;QACEM,SAAS,EAAC,cAAc;QACxBO,GAAG,EAAG,0CACJX,OAAO,CAACY,WAAW,IAAIZ,OAAO,CAACa,aAChC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACFZ,OAAA;QAAKM,SAAS,EAAC,UAAU;QAAAE,QAAA,EAAEN,OAAO,CAACc,KAAK,IAAId,OAAO,CAACe;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACT,EAAA,CA9BuBF,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}