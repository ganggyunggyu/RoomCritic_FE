{"ast":null,"code":"var _jsxFileName = \"/Users/gyunggyugang/Programing/ToyProject/Diary-with-react/fe/src/pages/Join.js\",\n  _s = $RefreshSig$();\n/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport FormInput from '../components/FormInput';\nimport FormHeader from '../components/FormHeader';\nimport FormButton from '../components/FormButton';\nimport { emailReg, passwordReg } from '../util/Regs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Join() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setContirmPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [isPasswordReg, setIsPasswordReg] = useState(false);\n  const [isPasswordMatch, setIsPasswordMatch] = useState(false);\n  const [isEmailReg, setIsEmailReg] = useState(false);\n  const [isPhoneNumberCheck, setIsPhoneNumberCheck] = useState(false);\n  const [isJoinSubmitAble, setIsJoinSubmitAble] = useState(false);\n  const FormItems = [{\n    value: email,\n    setValue: setEmail,\n    type: 'email',\n    placeholder: '이메일을 입력해주세요',\n    name: 'email'\n  }, {\n    value: password,\n    setValue: setPassword,\n    type: 'password',\n    placeholder: '비밀번호를 입력해주세요'\n  }, {\n    value: confirmPassword,\n    setValue: setContirmPassword,\n    type: 'password',\n    placeholder: '비밀번호 확인'\n  }, {\n    value: displayName,\n    setValue: setDisplayName,\n    type: 'text',\n    placeholder: '이름을 입력해주세요'\n  }, {\n    value: phoneNumber,\n    setValue: setPhoneNumber,\n    type: 'text',\n    placeholder: '전화번호를 입력해주세요',\n    name: 'phoneNumber'\n  }];\n  const isJoin = async () => {\n    try {\n      const result = await axios.post('/auth/join', {\n        email: email,\n        password: password,\n        displayName: displayName,\n        phoneNumber: phoneNumber\n      });\n      console.log('가입요청성공 : ', result.data.message);\n    } catch (error) {\n      console.log('가입요청실패 : ', error);\n    }\n  };\n  const isTrim = value => {\n    return !!value.trim();\n  };\n  useEffect(() => {\n    setIsPasswordReg(passwordReg.test(password));\n    setIsPasswordMatch(password === confirmPassword);\n  }, [password, confirmPassword]);\n  useEffect(() => {\n    setIsEmailReg(emailReg.test(email));\n  }, [email]);\n  useEffect(() => {\n    setIsJoinSubmitAble(isEmailReg && isPasswordReg && isPasswordMatch);\n  }, [isEmailReg, isPasswordReg, isPasswordMatch, displayName, phoneNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n      text: 'Sign up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-5/6 md:w-80 mt-5\",\n      children: [FormItems.map((el, i) => {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          value: el.value,\n          setValue: el.setValue,\n          type: el.type,\n          placeholder: el.placeholder,\n          name: el.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(FormButton, {\n        submitFunc: isJoin,\n        isSubmitAble: isJoinSubmitAble,\n        text: 'Sigb up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Join, \"LxwK6ZiANIOREbHN7XW3KcPGdZw=\");\n_c = Join;\nvar _c;\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["React","useEffect","useState","axios","FormInput","FormHeader","FormButton","emailReg","passwordReg","jsxDEV","_jsxDEV","Join","_s","email","setEmail","password","setPassword","confirmPassword","setContirmPassword","displayName","setDisplayName","phoneNumber","setPhoneNumber","isPasswordReg","setIsPasswordReg","isPasswordMatch","setIsPasswordMatch","isEmailReg","setIsEmailReg","isPhoneNumberCheck","setIsPhoneNumberCheck","isJoinSubmitAble","setIsJoinSubmitAble","FormItems","value","setValue","type","placeholder","name","isJoin","result","post","console","log","data","message","error","isTrim","trim","test","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","submitFunc","isSubmitAble","_c","$RefreshReg$"],"sources":["/Users/gyunggyugang/Programing/ToyProject/Diary-with-react/fe/src/pages/Join.js"],"sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport FormInput from '../components/FormInput';\nimport FormHeader from '../components/FormHeader';\nimport FormButton from '../components/FormButton';\nimport { emailReg, passwordReg } from '../util/Regs';\n\nexport default function Join() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setContirmPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n\n  const [isPasswordReg, setIsPasswordReg] = useState(false);\n  const [isPasswordMatch, setIsPasswordMatch] = useState(false);\n  const [isEmailReg, setIsEmailReg] = useState(false);\n  const [isPhoneNumberCheck, setIsPhoneNumberCheck] = useState(false);\n\n  const [isJoinSubmitAble, setIsJoinSubmitAble] = useState(false);\n\n  const FormItems = [\n    {\n      value: email,\n      setValue: setEmail,\n      type: 'email',\n      placeholder: '이메일을 입력해주세요',\n      name: 'email',\n    },\n    {\n      value: password,\n      setValue: setPassword,\n      type: 'password',\n      placeholder: '비밀번호를 입력해주세요',\n    },\n    {\n      value: confirmPassword,\n      setValue: setContirmPassword,\n      type: 'password',\n      placeholder: '비밀번호 확인',\n    },\n    {\n      value: displayName,\n      setValue: setDisplayName,\n      type: 'text',\n      placeholder: '이름을 입력해주세요',\n    },\n    {\n      value: phoneNumber,\n      setValue: setPhoneNumber,\n      type: 'text',\n      placeholder: '전화번호를 입력해주세요',\n      name: 'phoneNumber',\n    },\n  ];\n\n  const isJoin = async () => {\n    try {\n      const result = await axios.post('/auth/join', {\n        email: email,\n        password: password,\n        displayName: displayName,\n        phoneNumber: phoneNumber,\n      });\n      console.log('가입요청성공 : ', result.data.message);\n    } catch (error) {\n      console.log('가입요청실패 : ', error);\n    }\n  };\n  const isTrim = (value) => {\n    return !!value.trim();\n  };\n\n  useEffect(() => {\n    setIsPasswordReg(passwordReg.test(password));\n    setIsPasswordMatch(password === confirmPassword);\n  }, [password, confirmPassword]);\n\n  useEffect(() => {\n    setIsEmailReg(emailReg.test(email));\n  }, [email]);\n\n  useEffect(() => {\n    setIsJoinSubmitAble(isEmailReg && isPasswordReg && isPasswordMatch);\n  }, [isEmailReg, isPasswordReg, isPasswordMatch, displayName, phoneNumber]);\n\n  return (\n    <div className='flex flex-col h-screen justify-center items-center'>\n      <FormHeader text={'Sign up'} />\n      <form className='w-5/6 md:w-80 mt-5'>\n        {FormItems.map((el, i) => {\n          return (\n            <FormInput\n              key={i}\n              value={el.value}\n              setValue={el.setValue}\n              type={el.type}\n              placeholder={el.placeholder}\n              name={el.name}\n            />\n          );\n        })}\n        <FormButton\n          submitFunc={isJoin}\n          isSubmitAble={isJoinSubmitAble}\n          text={'Sigb up'}\n        />\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}